---
title: "Journées de l'UMI SOURCE "
author: "Lenaïg MOIGN, Florent Bédécarrats"
format:
  html:
    output-file: "index"
    output-ext: "htm"
    toc: true
editor: visual
execute:
  warning: false
  error: false
editor_options: 
  chunk_output_type: console
---

## 1. FONCTIONNEMENT DE R STUDIO

parler des fonctions qui vont être utiles (select, mutate, filter, summarise)

## 2. OBJECTIFS DE LA FORMATION


## 3. INSTALLATION ET CHARGEMENT DES LIBRAIRIES R

*expliquer principe des librairies qui sont mobilisées*

```{r install_librairies} 

# INSTALLATION DES LIBRAIRIES R 

librairies_req <- c("tidyverse",# Une série de packages pour faciliter la manipulation de données
                    "readxl", # Pour lire les fichiers excel (Carvalho et al. 2018)
                    "writexl",# Pour écrire des fichiers excel 
                    "gt",# Pour produire de jolis tableaux
                    "sf", # Pour faciliter la manipulation de données géographiques
                    "maptiles", # Pour télécharger des fonds de carte 
                    "geodata", # Pour télécharger simplement les frontières administratives
                    "tidygeocoder", # Pour obtenir les coordonnées GPS d'un point à partir de son nom 
                    "tmap",# Pour produire de jolies cartes 
                    "wdpar", # Pour télécharger la base d'aires protégées WDPA
                    "mapme.biodiversity") # Pour importer et analyser des indicateurs de biodiversité

manquantes <- !(librairies_req %in% installed.packages())
if (any(manquantes)) install.packages(librairies_req[manquantes])

# CHARGEMENT DES LIBRAIRIES NECESSAIRES AUX PREMIERS TRAVAUX

library(tidyverse)
library(geodata)
library(sf)
library(tmap)
library(wdpar)
library(gt)
library(dplyr)
library(lubridate)
library(tmap)
library(mapme.biodiversity)

```

## 2. CHARGEMENT DES DONNÉES SUR LES AIRES PROTEGEES

*expliquer initiative WDPA, l'origine des données à disposition*

```{r}

# TELECHARGEMENT DES DONNEES DU WDPA 

WDPA_Senegal <- wdpa_fetch("Senegal", wait = TRUE, 
                          download_dir = "data/WDPA")

```

Aller lire la documentation et notamment la table attributaire pour comprendre le tableau 

## 3. CHARGEMENT DES CONTOURS ADMINISTRATIFS

```{r}

# On télécharge la version en ligne

contour_sen <- gadm(country = "Senegal", resolution = 1, level = 0,
                     path = "data/GADM") %>%
st_as_sf()

# On charge la version disponible localement 

save(contour_sen, file = "data/GADM/contour_sen.rds")
str(contour_sen)

```

## 4. EXPLORATION DES DONNÉES DISPONIBLES SUR LES AIRES PROTÉGÉES

# CARACTÉRISTIQUES SPATIALES

On charge de l'information géographique, il est important de connaître les caractéristiques de base des objets à savoir :

Quels types de géométrie ? Quel système de projection ?

```{r}

# CONNAÎTRE LES GÉOMÉTRIES DE LA COUCHE (POINTS, LIGNES, POLYGONES) 

WDPA_Senegal %>%
  mutate(geom_type = st_geometry_type(.)) %>%  # Ajout d'une colonne pour les catégories de géométries
  group_by(geom_type) %>%  # Tri des données en fonction de leur catégorie  
  summarise(n = n()) # Résumé pour chaque catégorie de géométrie

# CONNAÎTRE LE SYSTÈME DE PROJECTION 

crs(WDPA_Senegal)

```

Pour aller plus loin : définir le système de projection de notre fichier 

```{r}

WDPA_Senegal <- st_read("data/GADM.shp", quiet = TRUE) %>% # Si il manque la projection (pas de fichier .prj), alors on la spécifie à la main
  
  st_set_crs("EPSG:4326") %>% # EPSG 4326 = WSG 84 = le standard pour le web
  
```

# CONNAÎTRE LES DONNÉES MANQUANTES

On explore le tableau... cellules vides... texte 

```{r}

WDPA_Senegal %>%
  st_drop_geometry() %>%
  summarise("Nombre total d'aires protégées" = n(),
            "Catégorie IUCN manquante" = sum(IUCN_CAT == "Not Reported"),
            "Année de création manquante" = sum(STATUS_YR == 0),
            "Gestionnaire manquant" = sum(MANG_AUTH == "Not Reported")) %>%
  pivot_longer(cols = everything(),
               names_to = " ",
               values_to = "Nombre d'aires") %>%
  gt() %>%
  tab_header("Valeurs manquantes dans les données WDPA pour le Sénégal") %>%
  tab_source_note("Source : WDPA (juin 2023)")

```

# Pour aller plus loin : sélectionner les données à partir des opérateurs

Connaître les  aires protégées créées en 2020 : 

```{r}

WDPA_Senegal %>% 
filter(STATUS_YR == 2020) %>% 
select(NAME, DESIG)  

```

Connaître les aires protégées créées avant 1972 :

```{r}

# CONNAITRE LES AIRES PROTEGEES CREES AVANT 1972 (ETAPE 1)

WDPA_Senegal %>% 
filter(STATUS_YR < 1972) %>% 
select(NAME, DESIG) 

# CONNAITRE LES AIRES PROTEGEES CREES AVANT 1972 (ETAPE 2) 
# que celles dont on connaît l'année de création

WDPA_Senegal %>% 
  filter(STATUS_YR < 1972 & STATUS_YR != 0) %>% 
  select(NAME, DESIG) 

# CONNAITRE LES AIRES PROTEGEES CREES AVANT 1972 (ETAPE 3)
#que les polygones 

WDPA_Senegal %>% 
  filter(STATUS_YR < 1972 & STATUS_YR != 0) %>% 
  filter(st_geometry_type(.) == "MULTIPOLYGON") %>%
  select(NAME, DESIG) 

```

Connaître les aires protégées créées par mandat présidentiel : 

```{r}

# Créer une variable pour définir les périodes

WDPA_mandats <- WDPA_Senegal %>%
  filter(STATUS_YR != 0) %>% # On exclut les AP dont l'année de création n'est pas renseignée
  mutate(Periode = cut(STATUS_YR, breaks = c(1981, 2000, 2012, 2020),
                       labels = c("1981-2000", "2000-2012", "2012-2020"),
                       include.lowest = TRUE)) %>% # On créée des catégories de période (mandats)
  filter(!is.na(Periode)) # On exclut les valeurs NA correspondant aux années avant 1981 


# Calculer l'effectif total d'aires protégées sur les 3 mandats 

AP_mandats <- WDPA_mandats %>%
  filter(st_geometry_type(.) == "MULTIPOLYGON" & Periode != "NA") %>% # Sélection des polygones 
  group_by(Periode) %>% # Groupement des données par période de création de l'aire protégée 
  summarise(Effectif_total = n()) %>%  # Calcul du nombre d'observations pour chaque année 
  arrange(Periode) %>% #Tri des données par ordre croissant
  mutate(Nom = c("ABDOU DIOUF", "ABDOULAYE WADE", "MACKY SALL"))

# Création d'un beau tableau  

AP_mandats %>%
  st_drop_geometry()%>% 
  gt() %>%
  cols_label(Periode = "Mandat", Effectif_total = "Nombre de création d'aires protégées", Nom = "Président") %>%
  tab_header("Nombre de création d'aires protégées durant les derniers mandats présidentiels au Sénégal") %>%
  tab_source_note("Source : Données du WDPA (juin 2023)")

```

# 5. PRODUIRE DES CARTES SYNTHÉTIQUES SUR LES AIRES PROTÉGÉES

Carte 1. Les différentes catégorie d'aires protégées au Sénégal d'après les données satellitaires du WDPA

```{r}

tmap_mode(mode = "view") 
tm_shape(contour_sen) +
  tm_borders() + 
  tm_shape(WDPA_Senegal) + 
  tm_polygons(col = "DESIG", alpha = 0.6, title = "Catégories d'aires protégées au Sénégal",
              id = "NAME", 
              popup.vars = c("Type" = "DESIG", 
                             "Catégorie IUCN" = "IUCN_CAT",
                             "Surface déclarée" = "REP_AREA",
                             "Année du statut" = "STATUS_YR"))
tmap_options(check.and.fix = TRUE)

```

# Pour aller plus loin : cartes mettant en avant d'autres paramètres d'intérêt

Carte 2. En fonction de la catégorie IUCN 

```{r}
tmap_mode(mode = "view") 
tm_shape(contour_sen) +
tm_borders() + 
tm_shape(WDPA_Senegal) + 
tm_polygons(col = "IUCN_CAT", alpha = 0.6, title = "Catégorie IUCN",
            id = "NAME", 
            popup.vars = c("Type" = "DESIG", 
                            "Catégorie IUCN" = "IUCN_CAT",
                            "Surface déclarée" = "REP_AREA",
                            "Année du statut" = "STATUS_YR"))
tmap_options(check.and.fix = TRUE)
```

Carte 3. En fonction de l'année de création 

```{r}

# On sélectionne uniquement les champs qui sont renseignés dans la colonne STATUS_YR

WDPA_Senegal_yr <- WDPA_Senegal %>% 
  filter(STATUS_YR != 0)


# Sur le rendu de la carte, une seule catégorie d'année apparaît 


tm_shape(contour_senegal) +
  tm_borders() +
  tm_shape(WDPA_Senegal_yr) +
  tm_polygons(col = "STATUS_YR", alpha = 0.6, 
              title = "Création d'aires protégées au Sénégal",
              legend.format = list(big.mark = ""),
              id = "NAME",
              popup.vars = c("Type" = "DESIG",
                             "Catégorie IUCN" = "IUCN_CAT",
                             "Surface déclarée" = "REP_AREA"))
```

Carte 4. En fonction aire marine et aire terrestre

```{r}

# Version 1 : en utilisant le géo-traitement du package sf()

PA_terrestre <- WDPA_Senegal %>%
  st_intersection(contour_sen) #intersection
PA_marine <- WDPA_Senegal %>%
  st_difference(contour_sen) #différence

tm_shape(PA_terrestre) +
  tm_polygons(col = "brown") +
tm_shape(PA_marine) + 
  tm_polygons(col = "blue")

# Version 2 : renseigné dans la table d'attributs

tm_shape(WDPA_Senegal) + 
  tm_polygons(col = "MARINE", alpha = 0.6, title = "Aires protégées")

```

## 6. ACQUISITION DE DONNÉES ENVIRONNEMENTALES ET CALCUL D'INDICATEURS 

# Le package mapme.biodiversity

Le package "mapme.biodiversity" facilite l'analyse de données statistiques sur les aires protégées partout dans le monde.

Il supporte un nombre important de base de données et d'indicateurs associés relatifs à la biodiversité qui peuvent être utilisés pour surveiller et évaluer l'efficacité des efforts de protection.

Pour l'analyse des données géographiques, le package utilise sf pour l'exploitation des données vectorielles et terra pour les données rasters. Il supprime les tâches répétitives, telles que la la sélection temporelle et spatiale des ressources.

```{r}

help(package = "mapme.biodiversity")

```

Le package permet de calculer, via une importation de données provenant de sources open data, des indicateurs, disponibles sur des intervalles de temps réguliers pour environ deux décennies (2020-2020). 

Ces indicateurs permettent aux usagers d'analyser des dynamiques spatiales et temporelles relatives aux aires protégées. Pour connaître les ressources et les indicateurs associés disponibles :

```{r}

resources <- names(available_resources())
indicators <- names(available_indicators())

```

A la lecture de la liste, l'utilisateur choisit quels sont les indicateurs qui l'intéresse en fonction de ses objectifs d'analyse. Plus de détails sur les indicateurs (source, unité, limites) sont consultables sur le site : https://mapme-initiative.github.io/mapme.biodiversity/reference/index.html ou peuvent faire l'objet d'une recherche.

```{r}

?gmw

```

# Constitution d'un porte-feuille

Une fois le choix effectué, il doit d'abord initier un portefeuille de la 
biodiversité en utilisant un objet sf qui contient uniquement des géométries de 
type "polygone" via l'appel de la fonction init_portfolio().

Il s'agit d'apporter un traitement spécifique à l'objet sf constitué de polygones. 
Chaque ligne de l'objet est alors considérée comme un actif unique dans le portefeuille 
pour lequel des indicateurs de biodiversité seront calculés plus loin dans la chaîne de traitement.

NB : Si les aires protégées étaient de type multipolygone, on applique la fonction st_cast() pour considérer les polygones individuellement.

C'est-à-dire que le portefeuille produit des colonnes imbriquées pour chaque observation, car dans bien des cas, on peut avoir plusieurs valeurs (par année) pour une même observation, voire plusieurs variables. Par exemple, le calcul de l'indicateur traveltime produit des estimations de distance par rapport à une ville pour plusieurs tailles de ville possible. Lorsqu'on spécifie une taille, il produit deux variables : la distance estimée et la taille de la ville prise en compte pour l'estimation.

En créant le portefeuille, certaines vérifications préliminaires sont également effectuées, par exemple que le SRS de l'objet est EPSG:4326, sinon il sera transformé.

Certains paramètres globaux du portefeuille, tels que le répertoire de sortie pour les ensembles de données téléchargés, un répertoire temporaire pour les calculs intermédiaires, peuvent être définis par l'utilisateur pour avoir un contrôle plus précis du flux de travail. Cependant, ces paramètres sont également définis sur des valeurs par défaut sensibles et peuvent donc être omis lors de l'initialisation du portefeuille.

Cela va régler des informations importantes qui sont nécessaires plus loin dans la chaîne de traitement. Il est ensuite possible de demander le téléchargement d'une ressource qui est nécessaire pour importer les données dans le portefeuille et calculer les indicateurs spécifiques.

```{r}

# Exécuter la fonction init_portfolio


WDPA_Senegal_poly <- WDPA_Senegal %>% 
  filter(st_geometry_type(.) == "MULTIPOLYGON")


WDPA_mapme <- WDPA_Senegal_poly %>% 
  st_cast("POLYGON")

WDPA_mapme <- init_portfolio(x = WDPA_mapme, 
                                     years = 2000:2020,
                                     outdir = "data/mapme_Senegal",
                                     add_resources = TRUE,
                                     verbose = TRUE)

```

On récupère les données provenant des différentes sources d'open data et on calcule des indicateurs :

```{r}

available_indicators() #liste des indicateurs 
available_indicators(indicator = "treecover_area")


# Données de Global Forest Watch (GFW) sur le couvert forestier

WDPA_mapme <- get_resources(x = WDPA_mapme, 
                            resources = c("gfw_treecover", "gfw_lossyear"))

# Indicateurs GFW

WDPA_mapme <- calc_indicators(WDPA_mapme,
                                    indicators = "treecover_area",
                                    min_cover = 30, min_size = 1)
```

Exercice : obtenir des indicateurs sur la surface de mangrove

```{r}

# Données de Global Mangrove Watch (GMW) sur la surface de mangroves 

WDPA_mapme <- get_resources(x = WDPA_mapme,resources = "gmw")


# Indicateurs GMW

WDPA_mapme <- calc_indicators(WDPA_mapme,
                              indicators = "mangroves_area")
                            

# ENREGISTREMENT DES DONNEES GFW + GMW SUR 1 FICHIER RDS

save(WDPA_mapme, file = "data/WDPA_indicators.rds") 

```

Question : quelle est la différence entre les données GFW et GMW ? 

GFW 2 indicateurs et GMW 1 indicateur 
GFW observations continues sur 2020 à 2023 alors que GMW uniquement pour les périodes 1996, 2007-2010, 2015 et 2016


## 7. TRI DES DONNÉES POUR FACILITER L'EXPLORATION

Une fois que l'indicateur a été calculé individuellement pour tous les "actifs" du portefeuille, les données sont renvoyées sous la forme d'une colonne de liste imbriquée à l'objet d'origine.Si on a plusieurs indicateurs, on aura plusieurs colonnes avec des listes ayant une, deux ou plusieurs variables.

Cette imbrication n'est pas toujours indispensable. Par exemple, pour les cinq variables calculées ici (couvert forestier, surface de mangrove, rugosité, altitude et distance à une ville), car on ne cherche qu'une valeur par observation. On va donc dés-imbriquer les variables à l'aide de la fonction unnest().

On doit aussi se rappeler que les aires protégées sont parfois composées de plusieurs polygones disjoints et que mapme.biodiversity a calculé chaque indicateur pour chaque polygone séparément. Pour chaque aire protégée, on va donc faire la moyenne de ces indicateurs, pondérée par la surface respective de chaque polygone.

# Désimbrication des indicateurs 

initialement sous forme de liste + expliquer pourquoi 2 unnest

```{r}

WDPA_terrain <- WDPA_mapme %>%
  unnest(c(treecover_area)) %>% 
  unnest(c(mangroves_area)) 

```

On obtient alors un tableau avec un nombre d'observations 
important pour un même polygone. Pour un espace donné, plusieurs variables sont mesurées et sur des périodes de temps différentes. 

# Sélection des variables les plus pertinentes 

Diminution du nombre de colonnes 

```{r}

WDPA_stats <- WDPA_terrain %>% 
  select(Nom = ORIG_NAME, 
         Surface = REP_AREA, 
         Aire_marine_terrestre = MARINE, 
         Mangrove_surface = mangrove_extent,
         Annees_mangrove = year,
         Couvert_foret = treecover,
         Annees_f = years,
         Categorie = DESIG,
         Annee_creation = STATUS_YR,
         Geometrie = geometry) 

```

Exercice 1. A partir des données WDPA_stats : créer un tableau WDPA_stats_moyenne (avec l'assignation) et calculer pour chaque aire protégée, les moyennes de surface de mangrove et de couvert forestier

Fonctions à utiliser : 
group_by()
summarize()

```{r}

WDPA_stats_moyenne <- WDPA_stats %>% 
  group_by(Nom) %>%
  summarize(Moyenne_surface_mangrove = format(mean(Mangrove_surface),scientific = FALSE),
            Moyenne_couvert_foret = mean(Couvert_foret))

```

## 8. EXPLORATION DES DONNÉES AIRES PROTÉGÉES COUPLÉES AUX INDICATEURS ENVIRONNEMENTAUX

Exercice 2 : Quelles sont les aires protégées qui ont à la fois de la forêt et de la mangrove dans leur périmètre ? 

Fonctions à utiliser : 
filter() 
opérateurs
group_by()

```{r}

WDPA_stats_moyenne %>% 
  filter(Moyenne_couvert_foret != 0 & Moyenne_surface_mangrove != 0) %>%
  group_by(Nom)

```

Exercice 3 : A partir du tableau WDPA_stats, afficher les données sur l'Aire Marine Protégée de la Somone 

Fonctions à utiliser : 
filter()

```{r}

WDPA_Somone <-  WDPA_stats %>% 
  filter(Nom == "Aire Marine Protégée de la Somone") 
  
```

Piège : superficie en km² alors que superficie de la mangrove en Ha, on va donc modifier notre tableau pour convertir les Ha en km² 

```{r}

WDPA_stats <- WDPA_stats %>%
  mutate(Surface_AP_Ha = Surface * 100) %>%
  select(-Surface)

```

# Pour aller plus loin 

Création de colonnes présentant le pourcentage de mangrove et du couvert forestier par rapport à la superficie de l'aire protégée

```{r}

WDPA_stats <- WDPA_stats %>%
  mutate(Pourcent_mangrove = ifelse(Surface_AP_Ha != 0 & !is.na(Surface_AP_Ha), (Mangrove_surface / Surface_AP_Ha) * 100, 0),
       Pourcent_foret = ifelse(Surface_AP_Ha != 0 & !is.na(Surface_AP_Ha), (Mangrove_surface / Surface_AP_Ha) * 100, 0)
         )

```

Exercice 4. Produire une carte avec le couvert forestier 

A. Création d'un tableau : couvert forestier par année et par aire protégée

```{r}

WDPA_foret <- WDPA_stats %>%
  group_by(Nom) %>% 
  summarise(Couvert_foret = mean(Couvert_foret, na.rm = TRUE), 
            Annee_creation = first(Annee_creation), 
            Surface = first(Surface_AP_Ha))

  # pivot_wider(names_from = year, values_from = treecover, values_fill = 0)

```

Question de l'information qui apparaît, c'est le résultat de la dernière année 

```{r}

tmap_mode(mode = "view") 
tm_shape(contour_sen) +
tm_borders() + 
tm_shape(WDPA_stats) + 
tm_polygons(col = "Couvert_foret", alpha = 0.6, title = "Couvert forestier des aires protégées en 2020 au Sénégal",
              id = "Nom",
              legend.format = list(big.mark = ""),
              popup.vars = c("Categorie" = "Categorie",
                             "Surface déclarée" = "Surface",
                             "Année de création " = "Annee_creation")) 
```

Rectifier les années                            

Faire la même chose avec la mangrove : 

```{r}

WDPA_mangrove <- WDPA_stats %>%
  group_by(Nom) %>% 
  summarise(Mangrove_surface = format(mean(Mangrove_surface, na.rm = TRUE), scientific = FALSE), 
            Annee_creation = first(Annee_creation), 
            Surface = first(Surface_AP_Ha))

```

Carte : 

```{r}
tmap_mode(mode = "view") 
tm_shape(contour_sen) +
tm_borders() + 
tm_shape(WDPA_stats) + 
tm_polygons(col = "Mangrove_surface", alpha = 0.6, title = "Superficie de la mangrove des aires protégées en 2020 au Sénégal",
              id = "Nom",
              legend.format = list(big.mark = ""),
              popup.vars = c("Categorie" = "Categorie",
                             "Surface déclarée" = "Surface_AP_Ha",
                             "Année de création " = "Annee_creation")) 

```

voir pour tm_shape si WDPA_stats ou WDPA_mangrove

voir les problèmes avec surface et surface_AP_Ha
